@{
    ViewBag.Title = "Home Page";
}

<style>
    .vertical-nav {
        min-width: 17rem;
        width: 17rem;
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        margin-left: 100px;
        margin-top: 50px;
        padding: 20px;
        box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.4s;
        background-color: #563D7C;
        color: white;
    }
    .nav-link {
        color: gray;
        font-weight: bold;
    }
    .timeline {
        position: relative;
        width: 660px;
        margin: 0 auto;
        margin-top: 20px;
        padding: 1em 0;
        list-style-type: none;
    }
    .timeline:before {
        position: absolute;
        left: 50%;
        top: 0;
        content: ' ';
        display: block;
        width: 6px;
        height: 100%;
        margin-left: -3px;
        background-color: #123456;
        background: linear-gradient(to bottom, #123456 0%, #123456 8%, #123456 92%, #123456 100%);
        z-index: 5;
    }
    .timeline li {
        padding: 1em 0;
    }
    .timeline li:after {
        content: "";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
    .direction-l {
        position: relative;
        width: 300px;
        float: left;
        text-align: right;
    }
    .direction-r {
        position: relative;
        width: 300px;
        float: right;
    }
    .flag-wrapper {
        position: relative;
        display: inline-block;
        text-align: center;
    }
    .flag {
        position: relative;
        display: inline;
        background-color : '#123456';
        padding: 6px 10px;
        border-radius: 5px;
        font-weight: 600;
        text-align: left;
    }
    .direction-l .flag {
        box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.15), 0 0 1px rgba(0, 0, 0, 0.15);
    }
    .direction-r .flag {
        box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.15), 0 0 1px rgba(0, 0, 0, 0.15);
    }
        .direction-l .flag:before,
        .direction-r .flag:before {
            position: absolute;
            top: 50%;
            right: -40px;
            content: ' ';
            display: block;
            width: 12px;
            height: 12px;
            margin-top: -10px;
            background: #fff;
            border-radius: 10px;
            border: 4px solid #563D7C;
            z-index: 10;
        }
        .direction-r .flag:before {
            left: -40px;
        }
    .direction-l .flag:after {
        content: "";
        position: absolute;
        left: 100%;
        top: 50%;
        height: 0;
        width: 0;
        margin-top: -8px;
        border: solid transparent;
        border-left-color: #123456
        border-width: 8px;
        pointer-events: none;
    }
    .direction-r .flag:after {
        content: "";
        position: absolute;
        right: 100%;
        top: 50%;
        height: 0;
        width: 0;
        margin-top: -8px;
        border: solid transparent;
        border-right-color: #123456
        border-width: 8px;
        pointer-events: none;
    }
    .time-wrapper {
        display: inline;
        line-height: 1em;
        font-size: 0.8em;
        color: white;
        vertical-align: middle;
    }
    .direction-l .time-wrapper {
        float: left;
    }
    .direction-r .time-wrapper {
        float: right;
    }
    .time {
        display: inline-block;
        padding: 4px 6px;
        background: #123456;
    }
    .desc {
        margin: 1em 0.75em 0 0;
        color: black;
        font-size: 0.77777em;
        font-style: italic;
        line-height: 1.5em;
    }
    .direction-r .desc {
        margin: 1em 0 0 0.75em;
    }
    .wall {
        width: 100%;
        height: 20vh;
        border-radius: 5px;
    }
    .jumbo {
        background-image: url(https://news.sophos.com/wp-content/uploads/2018/04/shutterstock_591206291.jpg?w=640);
        background-size: cover;
        color: white;
    }
    .jumbo2 {
        background-color: #4863A0;
        color: white;
    }
    .active{
        background-color: white;
    }
        .active a {
            color: steelblue;
        }
</style>
<body>
    <div class="flex items-center">
        <div>
            <div class="jumbotron jumbo">
                <h1>ElGamal KeyExchange</h1>
                <h4>Zgjerimi i klaseve të .NET Framework për mundësimin e shkëmbimit të çelësave sipas ElGamal</h4>
                <p><a href="https://www.commonlounge.com/discussion/2be4d294aa9e44d4b67f6644cd9b5ced" class="btn btn-primary btn-lg" target="_blank">Learn more &raquo;</a></p>
            </div>

            <h2 class="text-center" id="history">Karakteristikat kryesore</h2>
            <ul class="timeline">
                <li>
                    <div class="direction-r">
                        <div class="flag-wrapper">
                            <span class="flag">Siguria</span>
                        </div>
                        <div class="desc">
                            Siguria e skemës së ElGamal varet nga vetitë e grupit G si dhe nga çfarëdo skeme e
                             padding që përdoret në mesazhe.
                        </div>
                    </div>
                </li>
                <li>
                    <div class="direction-l">
                        <div class="flag-wrapper">
                            <span class="flag">Efiçienca</span>
                        </div>
                        <div class="desc">
                            Enkriptimi me ElGamal është probabilistik, që do të thotë se një një plaintext i vetëm mund 
                            të enkriptohet si shumë ciphertexts, me konsekuencën që një enkriptim gjeneral i ElGamal prodhon 
                            një zgjerim në madhësi në proporcion 1:2 nga plaintext në ciphertext.
                        </div>
                    </div>
                </li>
            </ul>

            <h2 class="text-center mt-4" id="howItWorks">Gjenerimi i çelësit</h2>
            <p>
               Së pari Alice gjeneron çiftin e çelësave si në vijim:
            </p>
            <ul>
                <li>
                    Gjeneron një përshkrim efiçient të grupit ciklik G, të rendit q me gjenerator g. e reprezenton njësinë elementare të G.
                </li>
                <li>
                    Zgjedh një random integjer x nga {1,...,q-1}
                </li>
                <li>
                    Llogarit h:=g^x
                </li>
                <li>
                    Çelësi publik përmban vlerat (G,q,g,h). Alice publikon çelësin publik dhe i mbetet x si çelësi privat i saj 
                    , i cili duhet të mbahet sekret.
                </li>
            </ul>

            <h2 class="text-center mt-4" id="howItWorks">Enkriptimi dhe dekriptimi</h2>

            <p>
                Bob, enkripton mesazhin M tek Alice me çelësin e saj publik (G,q,g,h) si vijon:          
            </p>
            <ul>
                <li>
                    Mapon mesazhin M tek një element m i G duke përdorur një funksion mapues të kthyeshëm.
                </li>
                <li>
                    Zgjedh një random integjer y nga {1,...,q-1}.
                </li>
                <li>
                    Llogarit s:= h^y. Kjo quhet <em>shared secret.</em>
                </li>
                <li>
                    Llogarit c1:= g^y.
                </li>
                <li>
                    Llogarit c2:= m x s
                </li>
                <li>
                    Bobi dërgon ciphertext-in (c1, c2) tek Alice.
                </li>
            </ul>
            <p>
                Nëse njëri nga të dy e dinë edhe ciphertext-in (c1, c2) edhe plaintext-in m, njëri mundet lehtë të gjej <em>shared secret s</em> 
                përderisa c2 x m^-1 = s.
            </p>
            <p>
                Alice dekripton ciphertext-in (c1, c2) me çelësin e saj privat x si vijon:
            </p>
            <ul>
                <li>
                    Llogarit s:=c1^x. Përderisa c1=g^y, c1^x = g^(xy) = h^y, dhe kështu është i njëjti <em>shared secret</em> 
                    që është përdorur nga Bobi për enkriptim.
                </li>
                <li>
                    Llogarit s^-1, inversin e s në grupin G.
                </li>
                 <li>
                    Llogarit m:=c2 x s^-1. Kjo llogaritje jep mesazhin origjinal m, sepse c2 = m x s; prandaj c2 x s^-1 = (m x s) x s^-1 = m x e = m.
                </li>
                 <li>
                    Mapon m prapa te plaintext-i M.
                </li>
            </ul>

            <div class="jumbotron jumbo">
                <h2 class="text-center">Implementimi i kodit</h2>
            </div>

            <h2 class="text-center mb-4" id="classes">Klasat .NET</h2>
            <div class="row">
                <div class="col-md-3">
                    <h3>ElGamalCipher Class</h3>
                    <p>
                        Në këtë klasë bëhet vendosja e detajeve të çelësit, llogaritja e madhësisë së blloqeve dhe 
                        procesimi i tyre.
                    </p>
                </div>
                <div class="col-md-3">
                    <h3>ElGamalEncrypt Class</h3>
                    <p>
                        Në këtë klasë janë të implementuara metodat që ndihmojnë për enkriptimin e plaintext-it
                    </p>
                </div>
                <div class="col-md-3">
                    <h3>ElGamalDecrypt Class</h3>
                    <p>
                        Në këtë klasë janë të implementuara metodat që ndihmojnë për dekriptimin e ciphertext-it
                    </p>
                </div>
                <div class="col-md-3">
                    <h3>ElGamalManagement Class</h3>
                    <p>
                        Në këtë klasë bëhet gjenerimi i çiftit të çelësave, eksportimi dhe importimi i paramterave si dhe thirren 
                        klasat për enkriptimin dhe dekriptim në metodat përkatëse të tyre.
                    </p>
                </div>
                <div class="col-md-3">
                    <h3>Parameters Class</h3>
                    <p>
                        Në këtë klasë bëhet krijimi i parametrave si dhe shndërrimi në XML string i tyre.
                    </p>
                </div>
                <div class="col-md-3">
                    <h3>ElGamalOAEP KeyExchange Formatter Class</h3>
                    <p>
                        Në këtë klasë përfshihen metodat për specifikimin e instancës së algoritmit ElGamal, për formatimin e session 
                        key dhe enkripitimin e rezultatit si dhe për formatimin OAEP. 
                    </p>
                </div>
                 <div class="col-md-3">
                    <h3>ElGamalOAEP KeyExchange Deformatter Class</h3>
                    <p>
                        Kjo klasë bën dekriptimin e të dhënave të shkëmbyera (exchange data).
                    </p>
                </div>
            </div>
        </div>
    </div>
</body>